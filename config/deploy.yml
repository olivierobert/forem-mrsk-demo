# Name of your application. Used to uniquely configure containers.
service: forem

# Name of the container image.
image: olivierobert/forem-mrsk-demo

# Deploy to these servers.
servers:
  - 178.128.57.231

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: olivierobert
  password:
    - MRSK_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
env:
  clear:
    APP_DOMAIN: "localhost:3000"
    APP_PROTOCOL: "http://"
    COMMUNITY_NAME: "Bangkok.rb Community"
    DATABASE_POOL_SIZE: 5
    DEFAULT_EMAIL: "community@bangkorb.org"
    NODE_ENV: production
    RAILS_ENV: production
    RAILS_MAX_THREADS: 5
    WEB_CONCURRENCY: 2
  secret:
    - DATABASE_NAME
    - DATABASE_URL
    - FOREM_OWNER_SECRET
    - REDIS_URL
    - REDIS_SESSIONS_URL
    - REDIS_SIDEKIQ_URL
    - REDIS_RPUSH_URL
    - SECRET_KEY_BASE
    - SESSION_KEY

# Call a broadcast command on deploys.
# audit_broadcast_cmd:
#   bin/broadcast_to_bc

# Use a different ssh user than root
# ssh:
#   user: app

# Configure builder setup.
# builder:
#   args:
#     RUBY_VERSION: 3.2.0
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1

# Use accessory services (secrets come from .env).
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql.erb:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# Configure custom arguments for Traefik
# traefik:
#   args:
#     accesslog: true
#     accesslog.format: json

# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /up
#   port: 4000
