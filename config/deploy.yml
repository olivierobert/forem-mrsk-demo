# Name of your application. Used to uniquely configure containers.
service: forem

# Name of the container image.
image: olivierobert/forem-mrsk-demo

# Deploy to these servers.
servers:
  - 178.128.57.231

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: olivierobert
  password:
    - MRSK_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
env:
  clear:
    APP_DOMAIN: "178.128.57.231"
    APP_PROTOCOL: "http://"
    COMMUNITY_NAME: "Bangkok.rb Community"
    DEFAULT_EMAIL: "community@bangkorb.org"
    RACK_TIMEOUT_WAIT_TIMEOUT: 100_000
    RACK_TIMEOUT_SERVICE_TIMEOUT: 100_000
    HEROKU_RELEASE_CREATED_AT: ""
    HEROKU_SLUG_COMMIT: ""
    NODE_ENV: production
    RAILS_ENV: production
  secret:
    - FOREM_OWNER_SECRET
    - REDIS_URL
    - REDIS_SESSIONS_URL
    - REDIS_SIDEKIQ_URL
    - REDIS_RPUSH_URL
    - SECRET_KEY_BASE
    - SESSION_EXPIRY_SECONDS
    - OPENRESTY_URL
    - FORCE_SSL_IN_RAILS
    - DATABASE_NAME
    - DATABASE_URL
    - RAILS_MAX_THREADS
    - WEB_CONCURRENCY
    - DATABASE_POOL_SIZE
    - SESSION_KEY
    - HONEYBADGER_API_KEY
    - HONEYBADGER_JS_API_KEY
    - AWS_ID
    - AWS_SECRET
    - AWS_BUCKET_NAME
    - AWS_UPLOAD_REGION
    - AWS_S3_INPUT_BUCKET
    - AWS_S3_VIDEO_ID
    - AWS_S3_VIDEO_KEY
    - BUFFER_ACCESS_TOKEN
    - BUFFER_FACEBOOK_ID
    - BUFFER_LINKEDIN_ID
    - BUFFER_PROFILE_ID
    - BUFFER_TWITTER_ID
    - BUFFER_LISTINGS_PROFILE
    - CLOUDINARY_API_KEY
    - CLOUDINARY_API_SECRET
    - CLOUDINARY_CLOUD_NAME
    - CLOUDINARY_SECURE
    - HCTI_API_USER_ID
    - HCTI_API_KEY
    - FASTLY_API_KEY
    - FASTLY_SERVICE_ID
    - HONEYCOMB_API_KEY
    - GA_TRACKING_ID
    - GA_ANALYTICS_4_ID
    - MAILCHIMP_API_KEY
    - RECAPTCHA_SECRET
    - RECAPTCHA_SITE
    - SLACK_CHANNEL
    - SLACK_DEPLOY_CHANNEL
    - SLACK_WEBHOOK_URL
    - TWILIO_ACCOUNT_SID
    - TWILIO_VIDEO_API_KEY
    - TWILIO_VIDEO_API_SECRET
    - TWITCH_CLIENT_ID
    - TWITCH_CLIENT_SECRET
    - TWITCH_WEBHOOK_SECRET
    - STACK_EXCHANGE_APP_KEY
    - GITHUB_KEY
    - GITHUB_SECRET
    - SMTP_ADDRESS
    - SMTP_PORT
    - SMTP_DOMAIN
    - SMTP_USER_NAME
    - SMTP_PASSWORD
    - SMTP_AUTHENTICATION

# Call a broadcast command on deploys.
# audit_broadcast_cmd:
#   bin/broadcast_to_bc

# Use a different ssh user than root
# ssh:
#   user: app

# Configure builder setup.
# builder:
#   args:
#     RUBY_VERSION: 3.2.0
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1

# Use accessory services (secrets come from .env).
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql.erb:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# Configure custom arguments for Traefik
# traefik:
#   args:
#     accesslog: true
#     accesslog.format: json

# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /up
#   port: 4000
